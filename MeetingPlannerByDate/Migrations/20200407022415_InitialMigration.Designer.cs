// <auto-generated />
using System;
using MeetingPlanner.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeetingPlanner.Migrations
{
    [DbContext(typeof(ChurchContext))]
    [Migration("20200407022415_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeetingPlanner.Models.Meeting", b =>
                {
                    b.Property<DateTime>("MeetingID");

                    b.Property<string>("CloseHymn");

                    b.Property<string>("ClosePrayer");

                    b.Property<string>("Conducting");

                    b.Property<int>("MeetingNum")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MiddleHymn");

                    b.Property<string>("OpenHymn");

                    b.Property<string>("OpenPrayer");

                    b.Property<string>("SacramentHymn");

                    b.HasKey("MeetingID");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("MeetingPlanner.Models.Speaker", b =>
                {
                    b.Property<int>("SpeakerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("MeetingID");

                    b.Property<string>("Topic");

                    b.HasKey("SpeakerID");

                    b.HasIndex("MeetingID");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("MeetingPlanner.Models.Speaker", b =>
                {
                    b.HasOne("MeetingPlanner.Models.Meeting", "Meeting")
                        .WithMany("Speakers")
                        .HasForeignKey("MeetingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
